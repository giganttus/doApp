{
    "swagger": "2.0",
    "info": {
        "description": "Rest API for mobile/web app",
        "title": "Daily Offer API documentation",
        "contact": {
            "name": "API Support",
            "email": "domagojpr@gmail.com"
        },
        "version": "1.0"
    },
    "host": "127.0.0.1:1312",
    "basePath": "/api",
    "paths": {
        "/dailyOffer": {
            "get": {
                "description": "Get daily offer for logged user",
                "tags": [
                    "Daily Offer"
                ],
                "summary": "Get Daily Offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DailyOffers"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new daily offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Offer"
                ],
                "summary": "Create Daily Offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            }
        },
        "/dailyOffer/{id}": {
            "get": {
                "description": "Delet daily offer by offer id",
                "tags": [
                    "Daily Offer"
                ],
                "summary": "Delete Daily Offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DailyOffers"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            }
        },
        "/dailyOffer/{restaurantId}": {
            "get": {
                "description": "Get daily offer by restaurant ID",
                "tags": [
                    "Daily Offer"
                ],
                "summary": "Get Daily Offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DailyOffers"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            }
        },
        "/dailyOffers": {
            "get": {
                "description": "Get list of all daily offers",
                "tags": [
                    "Daily Offer"
                ],
                "summary": "Get Daily Offers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DailyOffers"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "User credentials for login",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Create new user for app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create an User",
                "parameters": [
                    {
                        "description": "User credentials for registration",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Users"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            }
        },
        "/restaurant": {
            "get": {
                "description": "Get list of all restaurants",
                "tags": [
                    "Restaurant"
                ],
                "summary": "Get Restaurants",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Users"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            },
            "put": {
                "description": "Update existing restaurant",
                "tags": [
                    "Restaurant"
                ],
                "summary": "Update Restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Restaurant info for update",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Restaurants"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Users"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new restaurant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Create Restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Restaurant info for creation",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Restaurants"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            }
        },
        "/restaurant/{id}": {
            "delete": {
                "description": "Delete existing restuarant by id",
                "tags": [
                    "Restaurant"
                ],
                "summary": "Delete Restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Users"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get list of all users",
                "tags": [
                    "Users"
                ],
                "summary": "Get Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token for Auth",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Users"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseBody"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helpers.ResponseBody": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                }
            }
        },
        "models.DailyOffers": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "maxLength": 100
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string",
                    "maxLength": 100
                },
                "restaurants_id": {
                    "type": "integer"
                }
            }
        },
        "models.LoginReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                }
            }
        },
        "models.LoginRes": {
            "type": "object",
            "properties": {
                "rolesId": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.Restaurants": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 100
                },
                "glink": {
                    "type": "string",
                    "maxLength": 100
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number",
                    "maximum": 100
                },
                "lon": {
                    "type": "number",
                    "maximum": 100
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "users_id": {
                    "type": "integer"
                }
            }
        },
        "models.Users": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 64
                },
                "firstname": {
                    "type": "string",
                    "maxLength": 64
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                },
                "rolesId": {
                    "type": "integer"
                }
            }
        }
    }
}